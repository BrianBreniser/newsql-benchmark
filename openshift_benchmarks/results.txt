---

These results are after we reconfigured fdb for multi az
FDB is running on fdb05
YCSB is running on fdb04

---



---

Running test final_md_l_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=0.0
          insert_proportion=1.0
          num_keys=300000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=200000
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            load_phase $i &

Database Config:
null

Process Counts:
null


---

Running test final_md_l_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=0.0
          insert_proportion=1.0
          num_keys=300000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=200000
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            load_phase $i &

Database Config:
Process Counts:

latency probes after 2 minutes of running

Throughput (ops/sec): 105279
Runtime (ms): 282800334
OperationCountInsert: 297000000
ErrorCountInsert: 0
SuccessCountInsert: 297000000
SuccessCountInsertBatched: 0
UnknownCountInsert: 0
AverageInsertLatency: 33118
OperationCountRead: 0
ErrorCountRead: 0
SuccessCountRead: 0
SuccessCountReadBatched: 0
UnknownCountRead: 0
AverageReadLatency: 0
95thPercentileReadLatency: 0
99thPercentileReadLatency: 0
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 114
99thPercentileUpdateLatency: 5659
95thPercentileInsertLatency: 49855
99thPercentileInsertLatency: 64031

---

Running test final_md_w_timed_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=0.0
          insert_proportion=1.0
          num_keys=300000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=300
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            run_phase $i &

Database Config:
Process Counts:

latency probes after 2 minutes of running

Throughput (ops/sec): 301969
Runtime (ms): 30068347
OperationCountInsert: 90797818
ErrorCountInsert: 0
SuccessCountInsert: 907978
SuccessCountInsertBatched: 89889840
UnknownCountInsert: 0
AverageInsertLatency: 11187
OperationCountRead: 0
ErrorCountRead: 0
SuccessCountRead: 0
SuccessCountReadBatched: 0
UnknownCountRead: 0
AverageReadLatency: 0
95thPercentileReadLatency: 0
99thPercentileReadLatency: 0
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 103
99thPercentileUpdateLatency: 647167
95thPercentileInsertLatency: 1
99thPercentileInsertLatency: 404479

---

Running test final_md_r_timed_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=1.0
          insert_proportion=0.0
          num_keys=300000000
          value_size_bytes=2000
          batch_size=50
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=300
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            run_phase $i &

Database Config:
Process Counts:

latency probes after 2 minutes of running

Throughput (ops/sec): 506809
Runtime (ms): 20438460
OperationCountInsert: 0
ErrorCountInsert: 0
SuccessCountInsert: 0
SuccessCountInsertBatched: 0
UnknownCountInsert: 0
AverageInsertLatency: 0
OperationCountRead: 151129580
ErrorCountRead: 1185220
SuccessCountRead: 1861076
SuccessCountReadBatched: 149268504
UnknownCountRead: 0
AverageReadLatency: 5040
95thPercentileReadLatency: 1
99thPercentileReadLatency: 182911
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 22383
99thPercentileUpdateLatency: 22447
95thPercentileInsertLatency: 0
99thPercentileInsertLatency: 0


---

Running test final_lg_w_timed_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=0.0
          insert_proportion=1.0
          num_keys=1000000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=600
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            run_phase $i &

Database Config:
Process Counts:

latency probes after 2 minutes of running

Throughput (ops/sec): 306546
Runtime (ms): 60067910
OperationCountInsert: 184136946
ErrorCountInsert: 0
SuccessCountInsert: 1841365
SuccessCountInsertBatched: 182295581
UnknownCountInsert: 0
AverageInsertLatency: 10715
OperationCountRead: 0
ErrorCountRead: 0
SuccessCountRead: 0
SuccessCountReadBatched: 0
UnknownCountRead: 0
AverageReadLatency: 0
95thPercentileReadLatency: 0
99thPercentileReadLatency: 0
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 19135
99thPercentileUpdateLatency: 34111
95thPercentileInsertLatency: 1
99thPercentileInsertLatency: 390655


---

Running test final_lg_l_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=0.0
          insert_proportion=1.0
          num_keys=1000000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=200000
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            load_phase $i &

Database Config:
Process Counts:

latency probes after 2 minutes of running

Throughput (ops/sec): 67610
Runtime (ms): 1479040533
OperationCountInsert: 1000000000
ErrorCountInsert: 0
SuccessCountInsert: 1000000000
SuccessCountInsertBatched: 0
UnknownCountInsert: 0
AverageInsertLatency: 46911
OperationCountRead: 0
ErrorCountRead: 0
SuccessCountRead: 0
SuccessCountReadBatched: 0
UnknownCountRead: 0
AverageReadLatency: 0
95thPercentileReadLatency: 0
99thPercentileReadLatency: 0
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 96
99thPercentileUpdateLatency: 400
95thPercentileInsertLatency: 60767
99thPercentileInsertLatency: 68543

---

Running test final_lg_w_timed_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=0.0
          insert_proportion=1.0
          num_keys=1000000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=600
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            run_phase $i &

Database Config:
Process Counts:

latency probes after 2 minutes of running

Throughput (ops/sec): 297732
Runtime (ms): 60063346
OperationCountInsert: 178828364
ErrorCountInsert: 0
SuccessCountInsert: 1788281
SuccessCountInsertBatched: 177040083
UnknownCountInsert: 0
AverageInsertLatency: 11193
OperationCountRead: 0
ErrorCountRead: 0
SuccessCountRead: 0
SuccessCountReadBatched: 0
UnknownCountRead: 0
AverageReadLatency: 0
95thPercentileReadLatency: 0
99thPercentileReadLatency: 0
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 21615
99thPercentileUpdateLatency: 442367
95thPercentileInsertLatency: 1
99thPercentileInsertLatency: 357887

---

Running test final_lg_r_timed_1

---

YCSB Setup:
          update_proportion=0.0
          read_proportion=1.0
          insert_proportion=0.0
          num_keys=1000000000
          value_size_bytes=2000
          batch_size=100
          num_clients=20
          threads_per_process=32
          max_execution_time_seconds=600
          keys_per_host=$((num_keys / num_clients))
          operation_count=$((keys_per_process / batch_size))
          load_phase() {
              -p recordcount=$num_keys \
              -p db.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p updateproportion=$update_proportion \
              -p insertproportion=$insert_proportion \
              -p threadcount=$threads_per_process
          run_phase() {
              -p recordcount=$num_keys \
              -p foundationdb.batchsize=$batch_size \
              -p maxexecutiontime=$max_execution_time_seconds \
              -p readproportion=$read_proportion \
              -p insertproportion=$insert_proportion \
              -p updateproportion=$update_proportion \
              -p threadcount=$threads_per_process
          for i in `seq 0 4`; do
            run_phase $i &

Database Config:
Process Counts:
latency probes after 2 minutes of running


Throughput (ops/sec): 712371
Runtime (ms): 45043394
OperationCountInsert: 0
ErrorCountInsert: 0
SuccessCountInsert: 0
SuccessCountInsertBatched: 0
UnknownCountInsert: 0
AverageInsertLatency: 0
OperationCountRead: 427812634
ErrorCountRead: 0
SuccessCountRead: 4278124
SuccessCountReadBatched: 423534510
UnknownCountRead: 0
AverageReadLatency: 5181
95thPercentileReadLatency: 0
99thPercentileReadLatency: 222719
OperationCountUpdate: 0
ErrorCountUpdate: 0
SuccessCountUpdate: 0
SuccessCountUpdateBatched: 0
UnknownCountUpdate: 0
AverageUpdateLatency: 0
95thPercentileUpdateLatency: 1362
99thPercentileUpdateLatency: 200447
95thPercentileInsertLatency: 0
99thPercentileInsertLatency: 0
